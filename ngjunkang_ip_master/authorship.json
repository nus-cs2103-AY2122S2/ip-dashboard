[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"    mainClassName \u003d \"baron.Launcher\"","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"    archiveBaseName \u003d \"baron\"","lastModifiedDate":"2022-02-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ngjunkang":17,"-":44}},{"path":"src/main/java/baron/Baron.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import baron.commands.Command;","lastModifiedDate":"2022-01-18"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import baron.commands.CommandManager;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import baron.message.Message;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskManager;","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import baron.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"import baron.util.TextUi;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":" * Main logic class for the Baron application that user uses to run. The Baron application keeps and","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":" * tracks tasks like a to-do list.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"public class Baron {","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    private static final String DEFAULT_STORAGE_FILE_PATH \u003d \"data/baron.txt\";","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    private final Scanner inputScanner;","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    private final CommandManager commandManager;","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"    private final TextUi textUi;","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code Baron} object with the default relative file path.","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    public Baron() {","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        this(Baron.DEFAULT_STORAGE_FILE_PATH);","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code Baron} object with the specified relative file path.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"     * @param relativeFilePath the relative file path to be used for Storage.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"    public Baron(String relativeFilePath) {","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"        TaskManager taskManagerTemp;","lastModifiedDate":"2022-01-25"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        this.inputScanner \u003d new Scanner(System.in);","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        this.storage \u003d new Storage(relativeFilePath);","lastModifiedDate":"2022-01-25"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"            taskManagerTemp \u003d new TaskManager(this.storage.load());","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"        } catch (BaronException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"            TextUi.printCommandOutput(e.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"            taskManagerTemp \u003d new TaskManager();","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"        this.taskManager \u003d taskManagerTemp;","lastModifiedDate":"2022-01-25"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"        this.commandManager \u003d new CommandManager(this.taskManager, this.storage);","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"        this.textUi \u003d new TextUi(this.taskManager);","lastModifiedDate":"2022-01-25"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"     * Starts the Baron application.","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"    private void start() {","lastModifiedDate":"2022-01-18"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"        this.textUi.showWelcomeMessage();","lastModifiedDate":"2022-01-25"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"        Command command;","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        do {","lastModifiedDate":"2022-01-18"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"            String fullCommand \u003d inputScanner.nextLine();","lastModifiedDate":"2022-01-18"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"            command \u003d this.commandManager.parseCommand(fullCommand);","lastModifiedDate":"2022-02-04"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"            TextUi.printCommandOutput(command.execute());","lastModifiedDate":"2022-01-25"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-18"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"        while (!command.isByeCommand());","lastModifiedDate":"2022-01-18"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"            this.storage.save(this.taskManager.getAllTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"        } catch (BaronException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"            TextUi.printCommandOutput(e.toString());","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"     * Returns the response of the specified user input.","lastModifiedDate":"2022-02-05"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"     * @param input the input specified to get a response.","lastModifiedDate":"2022-02-05"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"     * @return the response of the specified user input.","lastModifiedDate":"2022-02-05"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"        return this.commandManager.parseCommand(input).execute();","lastModifiedDate":"2022-02-05"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"     * Returns the welcome message with the number of tasks that the user has.","lastModifiedDate":"2022-02-05"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"     * @return the welcome message with the number of tasks that the user has.","lastModifiedDate":"2022-02-05"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2022-02-05"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"        return Message.generateNoOfTasksMessage(this.taskManager.getTaskCount())","lastModifiedDate":"2022-02-05"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"                + \"\\n\" + \"What can I do for you?\";","lastModifiedDate":"2022-02-05"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"     * Initialises and starts the Baron application (CLI).","lastModifiedDate":"2022-02-05"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"     * @param args the command line arguments (not used).","lastModifiedDate":"2022-02-05"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-05"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"        new Baron(\"data/baron.txt\").start();","lastModifiedDate":"2022-02-05"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ngjunkang":102}},{"path":"src/main/java/baron/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron;","lastModifiedDate":"2022-02-03"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.ui.Main;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"public class Launcher {","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-02-03"}],"authorContributionMap":{"ngjunkang":13}},{"path":"src/main/java/baron/commands/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import baron.message.Message;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.Task;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskManager;","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskType;","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import baron.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":" * Represents the add task command, denoted by todo, deadline and event.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2022-01-19"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    private final String commandArg;","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    private final TaskType taskType;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     * Constructs an add task command with the specified {@code TaskManager}, {@code Storage},","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     * {@code TaskType} and command arguments.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"     * @param taskManager the {@code TaskManager} for the command execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     * @param storage the {@code Storage} for the command execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"     * @param taskType the {@code TaskType} for the command execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"     * @param commandArg the command arguments to be parsed.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"     * @see TaskManager","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"     * @see Storage","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"     * @see TaskType","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    public AddTaskCommand(TaskManager taskManager, Storage storage, TaskType taskType, String commandArg) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"        this.commandArg \u003d commandArg;","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"     * Executes the add task command by adding the task to this {@code TaskManager} and saving it","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"     * using {@code Storage}.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"     * @return the add task command output.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"    public String execute() {","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        if (this.commandArg.isBlank()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"            return (new BaronException(Message.generateEmptyDescMessage(this.taskType))).toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"            Task addedTask \u003d this.taskManager.addTask(this.taskType, this.commandArg);","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"                this.storage.save(this.taskManager.getAllTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"            } catch (BaronException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"                this.taskManager.revertChanges();","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"                throw e;","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"            this.taskManager.commitChanges();","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"            return Message.MESSAGE_ADD_TASK_SUCCESS + addedTask.toString() + \"\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"                    + Message.generateNoOfTasksMessage(this.taskManager.getTaskCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        } catch (BaronException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"            return e.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"ngjunkang":65}},{"path":"src/main/java/baron/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":" * Represents the bye/exit command.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"     * Returns true if this is a bye command.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"     * @return true if this is a bye command.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"        return true;","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     * Returns an exit message.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     * @return an exit message.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"    public String execute() {","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ngjunkang":27}},{"path":"src/main/java/baron/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":" * Represents a command given by user of Baron application, and it consists of one main","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":" * function: execute.","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"public abstract class Command {","lastModifiedDate":"2022-01-18"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"     * Returns true if this is a bye command.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"     * @return true if this is a bye command.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"    public boolean isByeCommand() {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"        return false;","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     * Executes the command and returns a string.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     * @return the command output of {@code String} type.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    public abstract String execute();","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ngjunkang":24}},{"path":"src/main/java/baron/commands/CommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskManager;","lastModifiedDate":"2022-01-19"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskType;","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import baron.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":" * Parses the given command string and returns the correct {@code Command} for execution,","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":" * together with the required dependencies ({@code TaskManager} or {@code Storage}).","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"public class CommandManager {","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2022-01-19"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code CommandManager} object with the specified {@code TaskManager}","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"     * and {@code Storage}.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     * @param taskManager the {@code TaskManager} required in executing some commands.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     * @param storage     the {@code Storage} required in executing some commands.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    public CommandManager(TaskManager taskManager, Storage storage) {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"     * Parses the given full command string and returns a {@code Command}.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"     * @param fullCommand the full command string to be parsed.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"     * @return a {@code Command} object ready for execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    public Command parseCommand(String fullCommand) {","lastModifiedDate":"2022-01-19"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"        assert fullCommand !\u003d null : \"fullCommand cannot be null\";","lastModifiedDate":"2022-02-08"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"        if (fullCommand \u003d\u003d null) {","lastModifiedDate":"2022-02-08"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"            return new EmptyCommand();","lastModifiedDate":"2022-02-08"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-08"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        fullCommand \u003d fullCommand.strip();","lastModifiedDate":"2022-01-19"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        if (fullCommand.equals(\"bye\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"            return new ByeCommand();","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        } else if (fullCommand.equals(\"list\")) {","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"            return new ListCommand(this.taskManager);","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        String[] fullCommands \u003d fullCommand.split(\"\\\\s+\", 2);","lastModifiedDate":"2022-02-09"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"        String commandArg \u003d \"\";","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"        if (fullCommands.length \u003d\u003d 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"            return new EmptyCommand();","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        assert (fullCommands.length \u003d\u003d 2) || (fullCommands.length \u003d\u003d 1) : \"splitString.length should be 1 or 2 only\";","lastModifiedDate":"2022-02-09"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"        if (fullCommands.length \u003d\u003d 2) {","lastModifiedDate":"2022-02-09"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"            commandArg \u003d fullCommands[1];","lastModifiedDate":"2022-02-09"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        switch (fullCommands[0]) {","lastModifiedDate":"2022-02-09"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"        case \"mark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"            return new MarkTaskCommand(this.taskManager, this.storage, commandArg);","lastModifiedDate":"2022-01-25"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"        case \"unmark\":","lastModifiedDate":"2022-01-20"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"            return new UnmarkTaskCommand(this.taskManager, this.storage, commandArg);","lastModifiedDate":"2022-01-25"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"        case \"todo\":","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"            return new AddTaskCommand(this.taskManager, this.storage, TaskType.TODO, commandArg);","lastModifiedDate":"2022-01-25"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"        case \"deadline\":","lastModifiedDate":"2022-01-20"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"            return new AddTaskCommand(this.taskManager, this.storage, TaskType.DEADLINE, commandArg);","lastModifiedDate":"2022-01-25"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"        case \"event\":","lastModifiedDate":"2022-01-20"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"            return new AddTaskCommand(this.taskManager, this.storage, TaskType.EVENT, commandArg);","lastModifiedDate":"2022-01-25"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"        case \"delete\":","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"            return new DeleteTaskCommand(this.taskManager, this.storage, commandArg);","lastModifiedDate":"2022-01-25"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"        case \"find\":","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"            return new FindCommand(this.taskManager, commandArg);","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"        default:","lastModifiedDate":"2022-01-20"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"            return new InvalidCommand();","lastModifiedDate":"2022-01-20"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"ngjunkang":79}},{"path":"src/main/java/baron/commands/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":" * Assists in the parsing of commands.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"public class CommandParser {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"     * Parses the given string into an integer for task index.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"     * @param arg the argument of {@code String} type.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"     * @return the integer represented by the given string.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"     * @throws BaronException if NumberFormatException is thrown by Integer.parseInt.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"     * @see Integer#parseInt(String)","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    public static int parseTaskIntArg(String arg) throws BaronException {","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"        if (arg.isBlank()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(\"Please enter the index of the task!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"        int intVal;","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"            intVal \u003d Integer.parseInt(arg);","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(\"Invalid argument type, please give a valid integer!\");","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        return intVal;","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":32}},{"path":"src/main/java/baron/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import baron.message.Message;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.Task;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskManager;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import baron.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":" * Represents a delete task command.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"    private final String commandArg;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a delete task command with the specified {@code TaskManager}, {@code Storage}","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     * and command argument.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     * @param taskManager the {@code TaskManager} for the command execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     * @param storage the {@code Storage} for the command execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"     * @param commandArg the command argument to be parsed.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     * @see TaskManager","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"     * @see Storage","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"    public DeleteTaskCommand(TaskManager taskManager, Storage storage, String commandArg) {","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        this.commandArg \u003d commandArg;","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"     * Execute the delete task command by deleting the task from the specified {@code TaskManager},","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"     * and updating the {@code Storage} if necessary.","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"     * @return the delete task command output.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"    public String execute() {","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"            int index \u003d CommandParser.parseTaskIntArg(this.commandArg);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"            Task deletedTask \u003d this.taskManager.deleteTask(index);","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"                this.storage.save(this.taskManager.getAllTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"            } catch (BaronException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"                this.taskManager.revertChanges();","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"                throw e;","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"            this.taskManager.commitChanges();","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"            return Message.MESSAGE_DELETE_SUCCESS + deletedTask.toString() + \"\\n\"","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"                    + Message.generateNoOfTasksMessage(this.taskManager.getTaskCount());","lastModifiedDate":"2022-01-25"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        } catch (BaronException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"            return e.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":57}},{"path":"src/main/java/baron/commands/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-18"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":" * Represents an echo command that returns the string that was given.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"public class EchoCommand extends Command {","lastModifiedDate":"2022-01-18"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"    private final String echoString;","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"     * Constructs an {@code EchoCommand} object with {code echoString} to be echoed.","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"     * @param echoString string to be echoed.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"    public EchoCommand(String echoString) {","lastModifiedDate":"2022-01-18"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"        this.echoString \u003d echoString;","lastModifiedDate":"2022-01-18"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-18"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     * Returns the string to be echoed that was set in this constructor.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     * @return the string to be echoed that was set in this constructor.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-18"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"    public String execute() {","lastModifiedDate":"2022-01-18"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"        return this.echoString;","lastModifiedDate":"2022-01-18"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-18"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-18"}],"authorContributionMap":{"ngjunkang":27}},{"path":"src/main/java/baron/commands/EmptyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":" * Represents an empty command.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"public class EmptyCommand extends Command {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"     * Returns the prompt to request a command.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"     * @return the prompt to request a command.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    public String execute() {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"        return (new BaronException(\"Please enter a command!\")).toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":19}},{"path":"src/main/java/baron/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-27"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskManager;","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":" * Represents the find command and filter the task list by keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"    private final String keyword;","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a find command with the specified {@code TaskManager} and a keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"     * @param taskManager the {@code TaskManager} for the command execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"     * @param keyword the keyword to filter the task list by.","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"    public FindCommand(TaskManager taskManager, String keyword) {","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"     * Executes the find command by filtering the task list in {@code TaskManager} with","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"     * the given keyword.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"     * @return the string representation of the filtered task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    public String execute() {","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        if (this.keyword.isBlank()) {","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"            return (new BaronException(\"Please provide a keyword!\")).toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        return \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"                + (new TaskManager(this.taskManager.filterDescByKeyword(this.keyword))).toString();","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-27"}],"authorContributionMap":{"ngjunkang":38}},{"path":"src/main/java/baron/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":" * Represents an invalid command.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"     * Returns a warning that Baron is unable to understand the command.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"     * @return a warning that Baron is unable to understand the command.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    public String execute() {","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"        return (new BaronException(\"I\u0027m sorry, but I beg your pardon?\")).toString();","lastModifiedDate":"2022-02-14"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":19}},{"path":"src/main/java/baron/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.message.Message;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskManager;","lastModifiedDate":"2022-01-19"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":" * Represents the list command that list all the tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2022-01-19"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2022-01-19"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"     * Constructs the {@code ListCommand} object with the specified {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"     * @param taskManager the {@code TaskManager} where all the tasks reside.","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    public ListCommand(TaskManager taskManager) {","lastModifiedDate":"2022-01-19"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     * Returns the list of all the tasks in {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     * @return the list of all the tasks in {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"    public String execute() {","lastModifiedDate":"2022-01-19"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"        if (this.taskManager.getTaskCount() \u003d\u003d 0) {","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"            return Message.MESSAGE_NO_TASK;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"        return Message.MESSAGE_LIST_TASK + this.taskManager.toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"ngjunkang":33}},{"path":"src/main/java/baron/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import baron.message.Message;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskManager;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import baron.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":" * Represents a mark task command that marks the task during execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    private final String commandArg;","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a mark task command with the specified {@code TaskManager}, {@code Storage}","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"     * and command argument.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     * @param taskManager the {@code TaskManager} for the command execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     * @param storage the {@code Storage} for the command execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     * @param commandArg the command argument to be parsed.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"     * @see TaskManager","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     * @see Storage","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    public MarkTaskCommand(TaskManager taskManager, Storage storage, String commandArg) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"        this.commandArg \u003d commandArg;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"     * Executes the mark task command by marking the task using {@code TaskManager} and saving","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"     * it in {@code Storage} if necessary.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"     * @return the mark task command output.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"    public String execute() {","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        int index;","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"            index \u003d CommandParser.parseTaskIntArg(this.commandArg);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"            if (this.taskManager.markTask(index)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"                try {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"                    this.storage.save(this.taskManager.getAllTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"                } catch (BaronException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"                    this.taskManager.unmarkTask(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"                    throw e;","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"            return Message.MESSAGE_MARK_SUCCESS + this.taskManager.getTask(index).toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        } catch (BaronException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"            return e.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":56}},{"path":"src/main/java/baron/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.commands;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import baron.message.Message;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskManager;","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import baron.util.Storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":" * Represents a unmark task command that unmarks the task during execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    private final Storage storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"    private final String commandArg;","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a unmark task command with the specified {@code TaskManager}, {@code Storage}","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"     * and command argument.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     * @param taskManager the {@code TaskManager} for the command execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     * @param storage the {@code Storage} for the command execution.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     * @param commandArg the command argument to be parsed.","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"     * @see TaskManager","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     * @see Storage","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    public UnmarkTaskCommand(TaskManager taskManager, Storage storage, String commandArg) {","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2022-01-25"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"        this.commandArg \u003d commandArg;","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"     * Executes the unmark task command by unmarking the task using {@code TaskManager} and saving","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"     * it in {@code Storage} if necessary.","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"     * @return the unmark task command output.","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"    public String execute() {","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        int index;","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"            index \u003d CommandParser.parseTaskIntArg(this.commandArg);","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"            if (this.taskManager.unmarkTask(index)) {","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"                try {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"                    this.storage.save(this.taskManager.getAllTasks());","lastModifiedDate":"2022-01-25"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"                } catch (BaronException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"                    this.taskManager.markTask(index);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"                    throw e;","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"            return Message.MESSAGE_UNMARK_SUCCESS + this.taskManager.getTask(index).toString();","lastModifiedDate":"2022-01-25"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        } catch (BaronException e) {","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"            return e.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":56}},{"path":"src/main/java/baron/exceptions/BaronException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.exceptions;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":" * Deals with all the exceptions in Baron application.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"public class BaronException extends Exception {","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code BaronException} with the given message.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"    public BaronException(String message) {","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"        super(message);","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"     * Returns the string representation of {@code BaronException}.","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"     * @return the string representation of {@code BaronException}.","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"        return \"OOPS!!! \" + getMessage();","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":23}},{"path":"src/main/java/baron/message/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.message;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskType;","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":" * Contains and generates messages to be printed out as the output/partial output of a command.","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"public class Message {","lastModifiedDate":"2022-01-25"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_MARK_SUCCESS \u003d \"Nice! I\u0027ve marked this task as done:\\n  \";","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_UNMARK_SUCCESS \u003d \"OK, I\u0027ve marked this task as not done yet:\\n  \";","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_DELETE_SUCCESS \u003d \"Noted. I\u0027ve removed this task:\\n \";","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_ADD_TASK_SUCCESS \u003d \"Got it. I\u0027ve added this task:\\n  \";","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_LIST_TASK \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_NO_TASK \u003d \"You have no tasks.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"Data file is not found.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_INVALID_FILE_FORMAT \u003d \"Data file format is invalid.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_FILE_CREATION_FAIL \u003d \"Data file cannot be created.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_FILE_WRITE_FAIL \u003d \"Data file cannot be written to.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"    public static final String MESSAGE_DATE_TIME_FORMAT_INVALID \u003d \"The date/time should be in the \"","lastModifiedDate":"2022-02-03"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"            + \"following format: d/M/yyyy HH:mm\";","lastModifiedDate":"2022-02-03"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"     * Generates the message to show the number of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"     * @param noOfTasks the number of tasks to be display.","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"     * @return the message that shows the number of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"    public static String generateNoOfTasksMessage(int noOfTasks) {","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"        if (noOfTasks \u003d\u003d 0) {","lastModifiedDate":"2022-01-25"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"            return Message.MESSAGE_NO_TASK;","lastModifiedDate":"2022-01-25"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"        } else if (noOfTasks \u003d\u003d 1) {","lastModifiedDate":"2022-01-25"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"            return \"Now you have 1 task in your list.\";","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"        return String.format(\"Now you have %d tasks in your list.\", noOfTasks);","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"     * Generates the message to warn that the description of a {@code TaskType} cannot be empty.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"     * @param taskType the type of task.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"     * @return the message that warns that the description of a {@code TaskType} cannot be empty.","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"    public static String generateEmptyDescMessage(TaskType taskType) {","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"        return \"The description of \" + taskType.getCommand() + \" cannot be empty.\";","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"     * Generates the message to warn that the task index is out of bound and thus invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"     * @param taskCount the number of tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"     * @return the message that warns that the task index is out of bound and thus invalid.","lastModifiedDate":"2022-01-27"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"    public static String generateTaskIndexOutOfBoundMessage(int taskCount) {","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        assert taskCount \u003e\u003d 0 : \"taskCount should be \u003e\u003d 0\";","lastModifiedDate":"2022-02-08"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        return \"The task index is invalid, only accepts 1 to \" + taskCount + \".\";","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"     * Generates the message to warn that duplicate tasks have been detected.","lastModifiedDate":"2022-02-14"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"     * @param taskType the type of task.","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"     * @return the message to warn that duplicate tasks have been detected.","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"    public static String generateDuplicateTaskMessage(TaskType taskType) {","lastModifiedDate":"2022-02-10"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"        return String.format(\"This %s has already been recorded.\", taskType.getCommand());","lastModifiedDate":"2022-02-10"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-14"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"     * Generates the message to prompt user to specify date/time using the specified command keyword.","lastModifiedDate":"2022-02-14"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-14"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"     * @param commandKeyword the command keyword that the user should use to specify date/time.","lastModifiedDate":"2022-02-14"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"     * @return the message to prompt user to specify date/time using the specified command keyword.","lastModifiedDate":"2022-02-14"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-14"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"    public static String getMissingDateTimeMessage(String commandKeyword) {","lastModifiedDate":"2022-02-14"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"        return String.format(\"Please specify a date/time by the %s keyword.\", commandKeyword);","lastModifiedDate":"2022-02-14"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":77}},{"path":"src/main/java/baron/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.tasks;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import baron.util.DateTimeUtil;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":" * Represents a task with a deadline that consists of one additional characteristic: \u0027by\u0027 when","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":" * the task should be finished. Inherited from {@code Task}.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":" *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":" * @see Task","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code Deadline} object with the specified description and deadline (by).","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     * @param description the description of this task.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     * @param by          the deadline of LocalDateTime type that the task should be finished by.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"     * Checks if this {@code Deadline} object is equal to the specified object.","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"     * @param o an {@code Object} to be compared with.","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"     * @return true if the specified object equals to this {@code Deadline} object.","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        if (!(o instanceof Deadline)) {","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        Deadline deadline \u003d (Deadline) o;","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"        boolean isDescriptionEqual \u003d this.description.equals(deadline.description);","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"        boolean isByEqual \u003d this.by.equals(deadline.by);","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"        return isDescriptionEqual \u0026\u0026 isByEqual;","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"     * Returns the string representation of this {@code Deadline} task.","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"     * @return the string representation of this {@code Deadline} task.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateTimeUtil.getDisplayString(this.by) + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"     * Returns the encoded string of this {@code Deadline} task to be stored in the storage","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"     * using the specified delimiter.","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"     * @param delimiter the string to be inserted in between various information of this task.","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"     * @return the encoded string of this {@code Deadline} task to be stored in the storage","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"     *         using the specified delimiter.","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"    public String toSaveString(String delimiter) {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"        return \"D\" + delimiter + super.toSaveString(delimiter) + delimiter + DateTimeUtil.getSaveString(this.by);","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":76}},{"path":"src/main/java/baron/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.tasks;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import baron.util.DateTimeUtil;","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":" * Represents a task to attend an event that consists of one additional characteristic: \u0027at\u0027 when","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":" * the event should be attended. Inherited from {@code Task}.","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":" *","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":" * @see Task","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"public class Event extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"    private final LocalDateTime at;","lastModifiedDate":"2022-01-24"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code Event} object with the specified description and date/time (at).","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     * @param description the description of this task.","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     * @param at          the date/time of LocalDateTime type that the task should be done at.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2022-01-24"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"        super(description);","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"     * Checks if this {@code Event} object is equal to the specified object.","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"     * @param o an {@code Object} to be compared with.","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"     * @return true if the specified object equals to this {@code Event} object.","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        if (!(o instanceof Event)) {","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-02-10"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        Event event \u003d (Event) o;","lastModifiedDate":"2022-02-10"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"        boolean isDescriptionEqual \u003d this.description.equals(event.description);","lastModifiedDate":"2022-02-10"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"        boolean isAtEqual \u003d this.at.equals(event.at);","lastModifiedDate":"2022-02-10"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"        return isDescriptionEqual \u0026\u0026 isAtEqual;","lastModifiedDate":"2022-02-10"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"     * Returns the string representation of this {@code Event} task.","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"     * @return the string representation of this {@code Event} task.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + DateTimeUtil.getDisplayString(this.at) + \")\";","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"     * Returns the encoded string of this {@code Event} task to be stored in the storage","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"     * using the specified delimiter.","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"     * @param delimiter the string to be inserted in between various information of this task.","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"     * @return the encoded string of this {@code Event} task to be stored in the storage","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"     * using the specified delimiter.","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"    public String toSaveString(String delimiter) {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"        return \"E\" + delimiter + super.toSaveString(delimiter) + delimiter + DateTimeUtil.getSaveString(this.at);","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":76}},{"path":"src/main/java/baron/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.tasks;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":" * An abstract class that represents a basic task in real-life that contains all the basic","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":" * characteristics and behaviour of a basic task.","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"public abstract class Task {","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"    protected String description;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code Task} object with the specified description and {@code isDone} is set to false.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"     * @param description the description of this task.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    public Task(String description) {","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"        this.description \u003d description.strip();","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     * Returns the status icon of this task.","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"     * @return \"X\" if the task is done, \" \" otherwise.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"        return (this.isDone ? \"\\u2713\" : \"\\u2718\");","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"     * Marks this task as done.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"     * @return true if the task is marked successfully, false if the task was already marked.","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    public boolean mark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"        return true;","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"     * Un-marks this task as not done yet.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"     * @return true if the task is un-marked successfully, false if the task was not marked.","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"    public boolean unmark() {","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"        if (this.isDone) {","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        return false;","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"     * Checks if this {@code Task} object is equal to the specified object.","lastModifiedDate":"2022-02-10"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"     * @param o an {@code Object} to be compared with.","lastModifiedDate":"2022-02-10"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"     * @return true if the specified object equals to this {@code Task} object.","lastModifiedDate":"2022-02-10"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"    public abstract boolean equals(Object o);","lastModifiedDate":"2022-02-10"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"     * Returns the string representation of this task.","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"     * @return the string representation of this task.","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2022-01-20"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"     * Returns the encoded string to be stored in the storage using the specified delimiter.","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"     * @param delimiter the string to be inserted in between various information of this task.","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"     * @return the encoded string to be stored in the storage using the specified delimiter.","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"    public String toSaveString(String delimiter) {","lastModifiedDate":"2022-01-24"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"        String isDoneString \u003d this.isDone ? \"1\" : \"0\";","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"        return isDoneString + delimiter + this.description;","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":84}},{"path":"src/main/java/baron/tasks/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.tasks;","lastModifiedDate":"2022-01-19"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import baron.message.Message;","lastModifiedDate":"2022-01-25"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import baron.util.DateTimeUtil;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":" * Represents a manager that keeps track of all the tasks in an {@code ArrayList},","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":" * and allow clients to add, mark and delete tasks. It also allows support operations","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":" * such as getting the number of tasks and checking whether there is no tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"public class TaskManager {","lastModifiedDate":"2022-01-19"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    private ArrayList\u003cTask\u003e previousTaskList \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code TaskManager} object containing no tasks represented by an empty {@code ArrayList}.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    public TaskManager() {","lastModifiedDate":"2022-01-19"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-19"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code TaskManager} object containing the defined tasks as given in {@code taskList}","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"     * @param taskList {@code ArrayList} containing tasks to be managed by {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"     * @see ArrayList","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"     * @see Task","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    public TaskManager(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2022-01-27"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"     * Returns {@code true} if this {@code TaskManager} contains no tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"     * @return {@code true} if this {@code TaskManager} contains no tasks.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2022-01-19"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        return this.taskList.isEmpty();","lastModifiedDate":"2022-01-19"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"     * Returns the number of tasks in this {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"     * @return the number of tasks in this {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"    public int getTaskCount() {","lastModifiedDate":"2022-01-19"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        return this.taskList.size();","lastModifiedDate":"2022-01-19"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"     * Appends the specified {@code Task} to the end of the {@code taskList} of {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"     * @param newTask {@code Task} to be appended to the {@code taskList} of {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"     * @return the newly appended {@code Task}.","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"    public Task addTask(Task newTask) {","lastModifiedDate":"2022-01-20"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"        assert newTask !\u003d null : \"newTask cannot be null\";","lastModifiedDate":"2022-02-08"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2022-01-19"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"        return newTask;","lastModifiedDate":"2022-01-20"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"     * Appends the {@code Task} to the end of the {@code taskList} of {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"     * The {@code Task} is parsed from commandArg according to the requirements of each","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"     * {@code TaskType}, namely {@code ToDo}, {@code Deadline} and {@code Event}.","lastModifiedDate":"2022-01-27"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"     * @param taskType   type of the task {@code ToDo}, {@code Deadline} or {@code Event}.","lastModifiedDate":"2022-01-27"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"     * @param commandArg command argument to be parsed.","lastModifiedDate":"2022-01-27"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"     * @return the newly appended {@code Task}.","lastModifiedDate":"2022-01-27"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"     * @throws BaronException If commandArg is in the wrong format as required by the taskType.","lastModifiedDate":"2022-01-27"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"     * @see ToDo","lastModifiedDate":"2022-01-27"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"     * @see Deadline","lastModifiedDate":"2022-01-27"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"     * @see Event","lastModifiedDate":"2022-01-27"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"    public Task addTask(TaskType taskType, String commandArg) throws BaronException {","lastModifiedDate":"2022-01-20"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"        Task newTask;","lastModifiedDate":"2022-01-20"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"        if (taskType \u003d\u003d TaskType.TODO) {","lastModifiedDate":"2022-01-20"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"            newTask \u003d new ToDo(commandArg);","lastModifiedDate":"2022-01-20"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"        } else {","lastModifiedDate":"2022-02-14"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"            String commandKeyword \u003d (taskType \u003d\u003d TaskType.DEADLINE) ? \"/by\" : \"/at\";","lastModifiedDate":"2022-02-14"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"            String[] commandArgs \u003d commandArg.split(String.format(\" %s \", commandKeyword), 2);","lastModifiedDate":"2022-02-14"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"            if (commandArgs.length \u003d\u003d 1) {","lastModifiedDate":"2022-02-09"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"                if (commandArgs[0].startsWith(commandKeyword)) {","lastModifiedDate":"2022-02-14"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"                    throw new BaronException(Message.generateEmptyDescMessage(taskType));","lastModifiedDate":"2022-01-25"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"                }","lastModifiedDate":"2022-01-20"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"                throw new BaronException(Message.getMissingDateTimeMessage(commandKeyword));","lastModifiedDate":"2022-02-14"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"            } else if (commandArgs.length \u003d\u003d 0) {","lastModifiedDate":"2022-02-09"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"                throw new BaronException(Message.generateEmptyDescMessage(taskType));","lastModifiedDate":"2022-02-09"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"            assert commandArgs.length \u003d\u003d 2 : \"commandArgs.length should be only up to 2\";","lastModifiedDate":"2022-02-09"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"            LocalDateTime localDateTime \u003d DateTimeUtil.getDateTime(commandArgs[1]);","lastModifiedDate":"2022-02-09"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"            if (taskType \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2022-02-14"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"                newTask \u003d new Deadline(commandArgs[0], localDateTime);","lastModifiedDate":"2022-02-09"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"            } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"                newTask \u003d new Event(commandArgs[0], localDateTime);","lastModifiedDate":"2022-02-09"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-20"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"        if (this.taskList.contains(newTask)) {","lastModifiedDate":"2022-02-10"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.generateDuplicateTaskMessage(taskType));","lastModifiedDate":"2022-02-10"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2022-01-20"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"        this.previousTaskList \u003d this.getAllTasks();","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"        return newTask;","lastModifiedDate":"2022-01-20"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"     * Retrieves the {@code Task} at the specified position (1-indexed).","lastModifiedDate":"2022-01-27"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"     * @param index the index of the task (1-indexed).","lastModifiedDate":"2022-01-27"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"     * @return the {@code Task} at the specified position (1-indexed).","lastModifiedDate":"2022-01-27"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"     * @throws BaronException If there is no tasks or index is out of bound.","lastModifiedDate":"2022-01-27"},{"lineNumber":118,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":119,"author":{"gitId":"ngjunkang"},"content":"    public Task getTask(int index) throws BaronException {","lastModifiedDate":"2022-01-27"},{"lineNumber":120,"author":{"gitId":"ngjunkang"},"content":"        assert this.getTaskCount() \u003e\u003d 0 : \"getTaskCount() cannot be \u003c 0\";","lastModifiedDate":"2022-02-08"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":122,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.MESSAGE_NO_TASK);","lastModifiedDate":"2022-01-27"},{"lineNumber":123,"author":{"gitId":"ngjunkang"},"content":"        } else if (index \u003c 1 || index \u003e this.getTaskCount()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":124,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.generateTaskIndexOutOfBoundMessage(this.getTaskCount()));","lastModifiedDate":"2022-01-27"},{"lineNumber":125,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-27"},{"lineNumber":126,"author":{"gitId":"ngjunkang"},"content":"        return this.taskList.get(index - 1);","lastModifiedDate":"2022-01-20"},{"lineNumber":127,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":128,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":129,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":130,"author":{"gitId":"ngjunkang"},"content":"     * Retrieves all tasks in this {@code TaskManager} in the form of {@code ArrayList\u003cTask\u003e}.","lastModifiedDate":"2022-01-27"},{"lineNumber":131,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":132,"author":{"gitId":"ngjunkang"},"content":"     * @return a new {@code ArrayList\u003cTask\u003e} containing all the tasks in this {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":133,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":134,"author":{"gitId":"ngjunkang"},"content":"    public ArrayList\u003cTask\u003e getAllTasks() {","lastModifiedDate":"2022-01-24"},{"lineNumber":135,"author":{"gitId":"ngjunkang"},"content":"        return new ArrayList\u003c\u003e(this.taskList);","lastModifiedDate":"2022-01-24"},{"lineNumber":136,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":137,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":138,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":139,"author":{"gitId":"ngjunkang"},"content":"     * Marks the task that is at the specified position (1-indexed).","lastModifiedDate":"2022-01-27"},{"lineNumber":140,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":141,"author":{"gitId":"ngjunkang"},"content":"     * @param index the index of the task (1-indexed).","lastModifiedDate":"2022-01-27"},{"lineNumber":142,"author":{"gitId":"ngjunkang"},"content":"     * @return true if the task is marked successfully.","lastModifiedDate":"2022-01-27"},{"lineNumber":143,"author":{"gitId":"ngjunkang"},"content":"     * @throws BaronException If there is no task, the specified task was already marked,","lastModifiedDate":"2022-01-27"},{"lineNumber":144,"author":{"gitId":"ngjunkang"},"content":"     *                        or the index is out of bound.","lastModifiedDate":"2022-01-27"},{"lineNumber":145,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":146,"author":{"gitId":"ngjunkang"},"content":"    public boolean markTask(int index) throws BaronException {","lastModifiedDate":"2022-01-20"},{"lineNumber":147,"author":{"gitId":"ngjunkang"},"content":"        assert this.getTaskCount() \u003e\u003d 0 : \"getTaskCount() cannot be \u003c 0\";","lastModifiedDate":"2022-02-08"},{"lineNumber":148,"author":{"gitId":"ngjunkang"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":149,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.MESSAGE_NO_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":150,"author":{"gitId":"ngjunkang"},"content":"        } else if (index \u003c 1 || index \u003e this.getTaskCount()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":151,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.generateTaskIndexOutOfBoundMessage(this.getTaskCount()));","lastModifiedDate":"2022-02-09"},{"lineNumber":152,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":153,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":154,"author":{"gitId":"ngjunkang"},"content":"        if (this.taskList.get(index - 1).mark()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":155,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-01-20"},{"lineNumber":156,"author":{"gitId":"ngjunkang"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":157,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(\"The task is already marked.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":158,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":159,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":160,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":161,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":162,"author":{"gitId":"ngjunkang"},"content":"     * Un-marks the task that is at the specified position (1-indexed).","lastModifiedDate":"2022-01-27"},{"lineNumber":163,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":164,"author":{"gitId":"ngjunkang"},"content":"     * @param index the index of the task (1-indexed).","lastModifiedDate":"2022-01-27"},{"lineNumber":165,"author":{"gitId":"ngjunkang"},"content":"     * @return true if the task is un-marked successfully.","lastModifiedDate":"2022-01-27"},{"lineNumber":166,"author":{"gitId":"ngjunkang"},"content":"     * @throws BaronException If there is no task, the specified task was not marked,","lastModifiedDate":"2022-01-27"},{"lineNumber":167,"author":{"gitId":"ngjunkang"},"content":"     *                        or the index is out of bound.","lastModifiedDate":"2022-01-27"},{"lineNumber":168,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":169,"author":{"gitId":"ngjunkang"},"content":"    public boolean unmarkTask(int index) throws BaronException {","lastModifiedDate":"2022-01-20"},{"lineNumber":170,"author":{"gitId":"ngjunkang"},"content":"        assert this.getTaskCount() \u003e\u003d 0 : \"getTaskCount() cannot be \u003c 0\";","lastModifiedDate":"2022-02-08"},{"lineNumber":171,"author":{"gitId":"ngjunkang"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":172,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.MESSAGE_NO_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":173,"author":{"gitId":"ngjunkang"},"content":"        } else if (index \u003c 1 || index \u003e this.getTaskCount()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":174,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.generateTaskIndexOutOfBoundMessage(this.getTaskCount()));","lastModifiedDate":"2022-02-09"},{"lineNumber":175,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":176,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":177,"author":{"gitId":"ngjunkang"},"content":"        if (this.taskList.get(index - 1).unmark()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":178,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-01-20"},{"lineNumber":179,"author":{"gitId":"ngjunkang"},"content":"        } else {","lastModifiedDate":"2022-01-20"},{"lineNumber":180,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(\"The task is not marked.\");","lastModifiedDate":"2022-01-20"},{"lineNumber":181,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-20"},{"lineNumber":182,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":183,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":184,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":185,"author":{"gitId":"ngjunkang"},"content":"     * Removes the task that is at the specified position (1-indexed).","lastModifiedDate":"2022-01-27"},{"lineNumber":186,"author":{"gitId":"ngjunkang"},"content":"     * Shifts any subsequent tasks to the left.","lastModifiedDate":"2022-01-27"},{"lineNumber":187,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":188,"author":{"gitId":"ngjunkang"},"content":"     * @param index the index of the task (1-indexed) to be removed.","lastModifiedDate":"2022-01-27"},{"lineNumber":189,"author":{"gitId":"ngjunkang"},"content":"     * @return removed {@code Task} if it was removed successfully.","lastModifiedDate":"2022-01-27"},{"lineNumber":190,"author":{"gitId":"ngjunkang"},"content":"     * @throws BaronException If there is no task or the index is out of bound.","lastModifiedDate":"2022-01-27"},{"lineNumber":191,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":192,"author":{"gitId":"ngjunkang"},"content":"    public Task deleteTask(int index) throws BaronException {","lastModifiedDate":"2022-01-20"},{"lineNumber":193,"author":{"gitId":"ngjunkang"},"content":"        assert this.getTaskCount() \u003e\u003d 0 : \"getTaskCount() cannot be \u003c 0\";","lastModifiedDate":"2022-02-08"},{"lineNumber":194,"author":{"gitId":"ngjunkang"},"content":"        if (this.isEmpty()) {","lastModifiedDate":"2022-01-20"},{"lineNumber":195,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.MESSAGE_NO_TASK);","lastModifiedDate":"2022-01-25"},{"lineNumber":196,"author":{"gitId":"ngjunkang"},"content":"        } else if (index \u003c 1 || index \u003e this.getTaskCount()) {","lastModifiedDate":"2022-02-09"},{"lineNumber":197,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.generateTaskIndexOutOfBoundMessage(this.getTaskCount()));","lastModifiedDate":"2022-02-09"},{"lineNumber":198,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-09"},{"lineNumber":199,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-09"},{"lineNumber":200,"author":{"gitId":"ngjunkang"},"content":"        this.previousTaskList \u003d this.getAllTasks();","lastModifiedDate":"2022-01-24"},{"lineNumber":201,"author":{"gitId":"ngjunkang"},"content":"        Task deletedTask \u003d this.taskList.get(index - 1);","lastModifiedDate":"2022-01-20"},{"lineNumber":202,"author":{"gitId":"ngjunkang"},"content":"        this.taskList.remove(index - 1);","lastModifiedDate":"2022-01-20"},{"lineNumber":203,"author":{"gitId":"ngjunkang"},"content":"        return deletedTask;","lastModifiedDate":"2022-01-20"},{"lineNumber":204,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":205,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":206,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":207,"author":{"gitId":"ngjunkang"},"content":"     * Filters the task list in this {@code TaskManager} by the specified {@code keyword}.","lastModifiedDate":"2022-01-27"},{"lineNumber":208,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":209,"author":{"gitId":"ngjunkang"},"content":"     * @param keyword the keyword to filter the task list by.","lastModifiedDate":"2022-01-27"},{"lineNumber":210,"author":{"gitId":"ngjunkang"},"content":"     * @return the filtered task list.","lastModifiedDate":"2022-01-27"},{"lineNumber":211,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":212,"author":{"gitId":"ngjunkang"},"content":"    public ArrayList\u003cTask\u003e filterDescByKeyword(String keyword) {","lastModifiedDate":"2022-01-27"},{"lineNumber":213,"author":{"gitId":"ngjunkang"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-27"},{"lineNumber":214,"author":{"gitId":"ngjunkang"},"content":"        this.taskList.forEach((task -\u003e {","lastModifiedDate":"2022-01-27"},{"lineNumber":215,"author":{"gitId":"ngjunkang"},"content":"            if (task.description.contains(keyword)) {","lastModifiedDate":"2022-01-27"},{"lineNumber":216,"author":{"gitId":"ngjunkang"},"content":"                filteredTaskList.add(task);","lastModifiedDate":"2022-01-27"},{"lineNumber":217,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-27"},{"lineNumber":218,"author":{"gitId":"ngjunkang"},"content":"        }));","lastModifiedDate":"2022-01-27"},{"lineNumber":219,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":220,"author":{"gitId":"ngjunkang"},"content":"        return filteredTaskList;","lastModifiedDate":"2022-01-27"},{"lineNumber":221,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-27"},{"lineNumber":222,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":223,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":224,"author":{"gitId":"ngjunkang"},"content":"     * Reverts the changes after an edit operation ({@code addTask}, {@code deleteTask}, {@code markTask},","lastModifiedDate":"2022-01-27"},{"lineNumber":225,"author":{"gitId":"ngjunkang"},"content":"     * {@code unmarkTask}).","lastModifiedDate":"2022-01-27"},{"lineNumber":226,"author":{"gitId":"ngjunkang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2022-01-27"},{"lineNumber":227,"author":{"gitId":"ngjunkang"},"content":"     * To use this method, the instance variable {@code previousTaskList} must be set","lastModifiedDate":"2022-01-27"},{"lineNumber":228,"author":{"gitId":"ngjunkang"},"content":"     * to the state of {@code taskList} using {@code this.previousTaskList \u003d this.getAllTasks();}.","lastModifiedDate":"2022-01-27"},{"lineNumber":229,"author":{"gitId":"ngjunkang"},"content":"     * {@code previousTaskList} can be cleared using {@code commitChanges} below.","lastModifiedDate":"2022-01-27"},{"lineNumber":230,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":231,"author":{"gitId":"ngjunkang"},"content":"     * @see #taskList","lastModifiedDate":"2022-01-27"},{"lineNumber":232,"author":{"gitId":"ngjunkang"},"content":"     * @see #previousTaskList","lastModifiedDate":"2022-01-27"},{"lineNumber":233,"author":{"gitId":"ngjunkang"},"content":"     * @see #commitChanges()","lastModifiedDate":"2022-01-27"},{"lineNumber":234,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":235,"author":{"gitId":"ngjunkang"},"content":"    public void revertChanges() {","lastModifiedDate":"2022-01-24"},{"lineNumber":236,"author":{"gitId":"ngjunkang"},"content":"        assert this.previousTaskList !\u003d null : \"Please read the JavaDoc of TaskManager\u0027s revertChanges!\";","lastModifiedDate":"2022-02-08"},{"lineNumber":237,"author":{"gitId":"ngjunkang"},"content":"        if (this.previousTaskList !\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":238,"author":{"gitId":"ngjunkang"},"content":"            this.taskList \u003d new ArrayList\u003c\u003e(this.previousTaskList);","lastModifiedDate":"2022-01-25"},{"lineNumber":239,"author":{"gitId":"ngjunkang"},"content":"            this.previousTaskList \u003d null;","lastModifiedDate":"2022-01-25"},{"lineNumber":240,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":241,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":242,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":243,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":244,"author":{"gitId":"ngjunkang"},"content":"     * Clears instance variable {@code previousTaskList} to null if the revert of the changes is not needed","lastModifiedDate":"2022-01-27"},{"lineNumber":245,"author":{"gitId":"ngjunkang"},"content":"     * anymore, and it is to be used hand-in-hand with {@code revertChanges}.","lastModifiedDate":"2022-01-27"},{"lineNumber":246,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":247,"author":{"gitId":"ngjunkang"},"content":"     * @see #revertChanges()","lastModifiedDate":"2022-01-27"},{"lineNumber":248,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":249,"author":{"gitId":"ngjunkang"},"content":"    public void commitChanges() {","lastModifiedDate":"2022-01-24"},{"lineNumber":250,"author":{"gitId":"ngjunkang"},"content":"        assert this.previousTaskList !\u003d null : \"Please read the JavaDoc of TaskManager\u0027s commitChanges!\";","lastModifiedDate":"2022-02-08"},{"lineNumber":251,"author":{"gitId":"ngjunkang"},"content":"        this.previousTaskList \u003d null;","lastModifiedDate":"2022-01-24"},{"lineNumber":252,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":253,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":254,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":255,"author":{"gitId":"ngjunkang"},"content":"     * Returns the string representation of this {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":256,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":257,"author":{"gitId":"ngjunkang"},"content":"     * @return the string representation of this {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":258,"author":{"gitId":"ngjunkang"},"content":"     * {@inheritDoc}","lastModifiedDate":"2022-01-27"},{"lineNumber":259,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":260,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-19"},{"lineNumber":261,"author":{"gitId":"ngjunkang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-19"},{"lineNumber":262,"author":{"gitId":"ngjunkang"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2022-01-24"},{"lineNumber":263,"author":{"gitId":"ngjunkang"},"content":"        for (int i \u003d 0; i \u003c this.getTaskCount(); i++) {","lastModifiedDate":"2022-01-19"},{"lineNumber":264,"author":{"gitId":"ngjunkang"},"content":"            output.append(\"  \").append(i + 1).append(\".\").append(this.taskList.get(i));","lastModifiedDate":"2022-01-24"},{"lineNumber":265,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-19"},{"lineNumber":266,"author":{"gitId":"ngjunkang"},"content":"            if (i !\u003d this.getTaskCount() - 1) {","lastModifiedDate":"2022-01-19"},{"lineNumber":267,"author":{"gitId":"ngjunkang"},"content":"                output.append(\"\\n\");","lastModifiedDate":"2022-01-24"},{"lineNumber":268,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-19"},{"lineNumber":269,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-19"},{"lineNumber":270,"author":{"gitId":"ngjunkang"},"content":"        return output.toString();","lastModifiedDate":"2022-01-24"},{"lineNumber":271,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-19"},{"lineNumber":272,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-19"}],"authorContributionMap":{"ngjunkang":272}},{"path":"src/main/java/baron/tasks/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.tasks;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"public enum TaskType {","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"    EVENT(\"event\");","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"    private final String command;","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    TaskType(String command) {","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"        this.command \u003d command;","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"    public String getCommand() {","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"        return this.command;","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":17}},{"path":"src/main/java/baron/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.tasks;","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":" * Represents a to-do task without any additional characteristic. Inherited from {@code Task}.","lastModifiedDate":"2022-01-27"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":" *","lastModifiedDate":"2022-01-27"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":" * @see Task","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code ToDo} object with the specified description.","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"     * @param description the description of this task.","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"        super(description);","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-10"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"     * Checks if this {@code ToDo} object is equal to the specified object.","lastModifiedDate":"2022-02-10"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-10"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"     * @param o an {@code Object} to be compared with.","lastModifiedDate":"2022-02-10"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"     * @return true if the specified object equals to this {@code ToDo} object.","lastModifiedDate":"2022-02-10"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-10"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-02-10"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2022-02-10"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2022-02-10"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-02-10"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"        if (o \u003d\u003d null) {","lastModifiedDate":"2022-02-10"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-02-10"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        if (!(o instanceof ToDo)) {","lastModifiedDate":"2022-02-10"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-02-10"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-10"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"        ToDo toDo \u003d (ToDo) o;","lastModifiedDate":"2022-02-10"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        return this.description.equals(toDo.description);","lastModifiedDate":"2022-02-10"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-10"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-10"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"     * Returns the string representation of this {@code ToDo} task.","lastModifiedDate":"2022-01-27"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"     * @return the string representation of this {@code ToDo} task.","lastModifiedDate":"2022-01-27"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"    public String toString() {","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-20"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"     * Returns the encoded string of this {@code ToDo} task to be stored in the storage","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"     * using the specified delimiter.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"     * @param delimiter the string to be inserted in between various information of this task.","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"     * @return the encoded string of this {@code ToDo} task to be stored in the storage","lastModifiedDate":"2022-01-27"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"     *         using the specified delimiter.","lastModifiedDate":"2022-01-27"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"    public String toSaveString(String delimiter) {","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"        return \"T\" + delimiter + super.toSaveString(delimiter);","lastModifiedDate":"2022-01-24"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":66}},{"path":"src/main/java/baron/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.ui;","lastModifiedDate":"2022-02-04"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import java.util.Collections;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2022-02-04"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2022-02-04"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2022-02-04"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2022-02-04"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2022-02-04"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2022-02-04"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":" * containing text from the speaker.","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2022-02-04"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"    private Label dialog;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    private Circle displayPicture;","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code DialogBox} node that acts as dialog box in a chat.","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"     * @param text text to display in the dialog box.","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"     * @param img image to display as the avatar alongside the dialog box.","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/DialogBox.fxml\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"        dialog.setText(text);","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-04"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2022-02-04"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-04"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"    private void flip() {","lastModifiedDate":"2022-02-04"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2022-02-04"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a blue {@code DialogBox} for the user, which is on the right-hand side.","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"     * @param text text to display in the dialog box.","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"     * @param img image to display as the avatar alongside the dialog box.","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"     * @return the constructed {@code DialogBox}.","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-04"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a white {@code DialogBox} for the user, which is on the left-hand side.","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"     * @param text text to display in the dialog box.","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"     * @param img image to display as the avatar alongside the dialog box.","lastModifiedDate":"2022-02-05"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"     * @return the constructed {@code DialogBox}.","lastModifiedDate":"2022-02-05"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"    public static DialogBox getBaronDialog(String text, Image img) {","lastModifiedDate":"2022-02-05"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2022-02-05"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"        db.flip();","lastModifiedDate":"2022-02-04"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"        db.dialog.setStyle(\"-fx-border-radius: 10 10 10 10; -fx-background-radius: 10 10 10 10;\"","lastModifiedDate":"2022-02-05"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"                + \"-fx-background-color: #FFFFFF;\");","lastModifiedDate":"2022-02-05"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"        return db;","lastModifiedDate":"2022-02-04"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-04"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-02-04"}],"authorContributionMap":{"ngjunkang":83}},{"path":"src/main/java/baron/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.Baron;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import javafx.application.Application;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"public class Main extends Application {","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    private final Baron baron \u003d new Baron();","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"     * Starts the JavaFX application.","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"     * @param stage the primary stage of the JavaFX application.","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    @Override","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"        Scene scene \u003d new Scene(new MainWindow(this.baron));","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"        stage.setScene(scene);","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"        stage.setTitle(\"Baron\");","lastModifiedDate":"2022-02-15"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"        stage.show();","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"ngjunkang":27}},{"path":"src/main/java/baron/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.ui;","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import java.util.Objects;","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import baron.Baron;","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2022-02-15"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import javafx.application.Platform;","lastModifiedDate":"2022-02-15"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"import javafx.util.Duration;","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2022-02-05"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"    private TextField userInput;","lastModifiedDate":"2022-02-05"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"    private Button sendButton;","lastModifiedDate":"2022-02-05"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"    private final Baron baron;","lastModifiedDate":"2022-02-05"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2022-02-05"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"            .getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2022-02-05"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"    private final Image baronImage \u003d new Image(Objects.requireNonNull(this.getClass()","lastModifiedDate":"2022-02-05"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"            .getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2022-02-05"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code MainWindow} object for the GUI with the specified {@code Baron} object.","lastModifiedDate":"2022-02-05"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"     * @param baron the {@code Baron} object that acts as the main logic for {@code MainWindow} object.","lastModifiedDate":"2022-02-05"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"     * @see Baron","lastModifiedDate":"2022-02-05"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"    public MainWindow(Baron baron) {","lastModifiedDate":"2022-02-05"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-02-05"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/views/MainWindow.fxml\"));","lastModifiedDate":"2022-02-05"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2022-02-05"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2022-02-05"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"            e.printStackTrace();","lastModifiedDate":"2022-02-05"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        this.baron \u003d baron;","lastModifiedDate":"2022-02-05"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        this.dialogContainer.getChildren().add(DialogBox.getBaronDialog(this.baron.getWelcomeMessage(),","lastModifiedDate":"2022-02-05"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"                this.baronImage));","lastModifiedDate":"2022-02-05"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"     * Initialise MainWindow GUI.","lastModifiedDate":"2022-02-05"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"    public void initialize() {","lastModifiedDate":"2022-02-05"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2022-02-05"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-05"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"     * Handles user input and creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2022-02-05"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"     * Duke\u0027s reply and then appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2022-02-05"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"     * If the user input is blank, do nothing.","lastModifiedDate":"2022-02-05"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-05"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"    @FXML","lastModifiedDate":"2022-02-05"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2022-02-05"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2022-02-05"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"            return;","lastModifiedDate":"2022-02-15"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"        String response \u003d this.baron.getResponse(input);","lastModifiedDate":"2022-02-15"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"        this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"                DialogBox.getUserDialog(input, this.userImage),","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"                DialogBox.getBaronDialog(response, this.baronImage)","lastModifiedDate":"2022-02-15"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"        );","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"        this.userInput.clear();","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"        exitIfBye(input);","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-02-15"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"     * Exits the application if the specified input is \"bye\".","lastModifiedDate":"2022-02-15"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-02-15"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"     * @param input user input.","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"    private void exitIfBye(String input) {","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"        if (input.strip().equals(\"bye\")) {","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"            this.sendButton.setDisable(true);","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"            this.userInput.setDisable(true);","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"            this.dialogContainer.getChildren().add(","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"                    DialogBox.getBaronDialog(\"This app will close in 2s...\", this.baronImage)","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"            );","lastModifiedDate":"2022-02-05"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"            PauseTransition pauseTransition \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"            pauseTransition.setOnFinished(e -\u003e Platform.exit());","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"            pauseTransition.play();","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-05"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-05"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"ngjunkang":105}},{"path":"src/main/java/baron/util/DateTimeUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.util;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import baron.message.Message;","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":" * A utility class used to process DateTime with all static members, mainly used to convert","lastModifiedDate":"2022-01-27"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":" * string to LocalDateTime and back.","lastModifiedDate":"2022-01-27"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":" *","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":" * @see LocalDateTime","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"public class DateTimeUtil {","lastModifiedDate":"2022-01-24"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    /** The format to convert from String to LocalDateTime */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    private static final DateTimeFormatter FORMATTER_INPUT \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HH:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    /** The format to convert from LocalDateTime to String */","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"    private static final DateTimeFormatter FORMATTER_DISPLAY \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, HH:mm\");","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     * Returns date/time of {@code LocalDateTime} type given a string.","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"     * @param dateTimeString the string to be parsed.","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"     * @return date/time of {@code LocalDateTime} type from {@code dateTimeString}.","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"     * @throws BaronException If {@code DateTimeParseException} is thrown by {@code LocalDateTime.parse}","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"     * @see LocalDateTime#parse(CharSequence, DateTimeFormatter)","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"    public static LocalDateTime getDateTime(String dateTimeString) throws BaronException {","lastModifiedDate":"2022-01-24"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-01-24"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"            return LocalDateTime.parse(dateTimeString, DateTimeUtil.FORMATTER_INPUT);","lastModifiedDate":"2022-01-27"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.MESSAGE_DATE_TIME_FORMAT_INVALID);","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"     * Returns the formatted date/time string for display from the given {@code LocalDateTime}.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"     * @param localDateTime the date/time to be formatted to a string.","lastModifiedDate":"2022-01-27"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"     * @return the formatted date/time string for display from the given {@code LocalDateTime}.","lastModifiedDate":"2022-01-27"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"    public static String getDisplayString(LocalDateTime localDateTime) {","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"        assert localDateTime !\u003d null : \"localDateTime cannot be null\";","lastModifiedDate":"2022-02-08"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        if (localDateTime \u003d\u003d null) {","lastModifiedDate":"2022-02-08"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"            return \"\";","lastModifiedDate":"2022-02-08"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"        return localDateTime.format(DateTimeUtil.FORMATTER_DISPLAY);","lastModifiedDate":"2022-01-27"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"     * Returns the formatted date/time string for storage from the given {@code LocalDateTime}.","lastModifiedDate":"2022-01-27"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"     * @param localDateTime the date/time to be formatted to a string.","lastModifiedDate":"2022-01-27"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"     * @return the formatted date/time string for storage from the given {@code LocalDateTime}.","lastModifiedDate":"2022-01-27"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"    public static String getSaveString(LocalDateTime localDateTime) {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        assert localDateTime !\u003d null : \"localDateTime cannot be null\";","lastModifiedDate":"2022-02-08"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"        if (localDateTime \u003d\u003d null) {","lastModifiedDate":"2022-02-08"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"            return \"\";","lastModifiedDate":"2022-02-08"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-08"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"        return localDateTime.format(DateTimeUtil.FORMATTER_INPUT);","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"ngjunkang":66}},{"path":"src/main/java/baron/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.util;","lastModifiedDate":"2022-01-24"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import java.io.File;","lastModifiedDate":"2022-01-24"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2022-01-24"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2022-01-24"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import java.io.IOException;","lastModifiedDate":"2022-01-24"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-24"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2022-01-24"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-01-24"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-02-03"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"import baron.message.Message;","lastModifiedDate":"2022-02-03"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.Deadline;","lastModifiedDate":"2022-02-03"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.Event;","lastModifiedDate":"2022-02-03"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.Task;","lastModifiedDate":"2022-02-03"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskType;","lastModifiedDate":"2022-02-03"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.ToDo;","lastModifiedDate":"2022-02-03"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":" * Deals with loading tasks from the file and saving tasks in the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"public class Storage {","lastModifiedDate":"2022-01-25"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    private static final String FILE_DELIMITER \u003d \"rwN\u003efox8@j`XNc;CA#FYzLogY.5Ze\";","lastModifiedDate":"2022-01-24"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"    private final File file;","lastModifiedDate":"2022-01-24"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"     * Constructs the {@code Storage} object with {@code File} location at the specified","lastModifiedDate":"2022-01-27"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"     * relative file path.","lastModifiedDate":"2022-01-27"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"     * @param relativeFilePath the relative file path that user wants to store the data at.","lastModifiedDate":"2022-01-27"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"    public Storage(String relativeFilePath) {","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        this.file \u003d new File(relativeFilePath);","lastModifiedDate":"2022-01-24"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"     * Loads and returns all the tasks in an {@code ArrayList\u003cTask\u003e}.","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"     * @return all the tasks in the form of an {@code ArrayList\u003cTask\u003e}.","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"     * @throws BaronException if the file is not found or the parsing of the data file fails.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"    public ArrayList\u003cTask\u003e load() throws BaronException {","lastModifiedDate":"2022-01-24"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        this.createFileIfNotExists();","lastModifiedDate":"2022-01-24"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"        if (this.file.exists() \u0026\u0026 this.file.isFile()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"            Scanner fileReader;","lastModifiedDate":"2022-01-24"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"                fileReader \u003d new Scanner(this.file);","lastModifiedDate":"2022-01-24"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"                throw new BaronException(Message.MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2022-01-25"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"            ArrayList\u003cTask\u003e newTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2022-01-24"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"            while (fileReader.hasNext()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"                String taskString \u003d fileReader.nextLine().strip();","lastModifiedDate":"2022-01-24"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"                newTaskList.add(parseTaskString(taskString));","lastModifiedDate":"2022-01-24"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"            return newTaskList;","lastModifiedDate":"2022-01-24"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2022-01-25"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"     * Saves the given task list of type {@code ArrayList\u003cTask\u003e} into the data file.","lastModifiedDate":"2022-01-27"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"     * @param taskList the list of tasks to be saved.","lastModifiedDate":"2022-01-27"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"     * @throws BaronException if data file is not found or {@code FileWriter} throws IOException.","lastModifiedDate":"2022-01-27"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) throws BaronException {","lastModifiedDate":"2022-01-24"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"        this.createFileIfNotExists();","lastModifiedDate":"2022-01-24"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"        if (this.file.exists() \u0026\u0026 this.file.isFile()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"                FileWriter fileWriter \u003d new FileWriter(this.file);","lastModifiedDate":"2022-01-24"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"                for (Task task : taskList) {","lastModifiedDate":"2022-01-24"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"                    fileWriter.write(task.toSaveString(Storage.FILE_DELIMITER) + \"\\n\");","lastModifiedDate":"2022-01-25"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"                fileWriter.close();","lastModifiedDate":"2022-01-24"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"                throw new BaronException(Message.MESSAGE_FILE_WRITE_FAIL);","lastModifiedDate":"2022-01-25"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2022-01-25"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"    private Task parseTaskString(String taskString) throws BaronException {","lastModifiedDate":"2022-01-24"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"        String[] taskStrings \u003d taskString.split(Storage.FILE_DELIMITER, 4);","lastModifiedDate":"2022-02-14"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"        if (taskStrings.length \u003c 3 || taskStrings.length \u003e 4) {","lastModifiedDate":"2022-02-14"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.MESSAGE_INVALID_FILE_FORMAT);","lastModifiedDate":"2022-01-25"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"        assert (taskStrings.length \u003d\u003d 3) || (taskStrings.length \u003d\u003d 4) : \"taskStrings.length must be 3 or 4\";","lastModifiedDate":"2022-02-14"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"        TaskType taskType \u003d getTaskType(taskStrings);","lastModifiedDate":"2022-02-14"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"        boolean isDone \u003d getIsDone(taskStrings);","lastModifiedDate":"2022-02-14"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"        String description \u003d getDescription(taskStrings);","lastModifiedDate":"2022-02-14"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"        LocalDateTime additionalInfo \u003d getAdditionalInfo(taskStrings);","lastModifiedDate":"2022-02-14"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"        Task newTask;","lastModifiedDate":"2022-01-24"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"        if (taskType \u003d\u003d TaskType.TODO) {","lastModifiedDate":"2022-01-24"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"            if (additionalInfo !\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"                throw new BaronException(Message.MESSAGE_INVALID_FILE_FORMAT);","lastModifiedDate":"2022-01-25"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"                newTask \u003d new ToDo(description);","lastModifiedDate":"2022-01-24"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"        } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"            if (additionalInfo \u003d\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"                throw new BaronException(Message.MESSAGE_INVALID_FILE_FORMAT);","lastModifiedDate":"2022-01-25"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"            } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"                if (taskType \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2022-01-24"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"                    newTask \u003d new Deadline(description, additionalInfo);","lastModifiedDate":"2022-01-24"},{"lineNumber":115,"author":{"gitId":"ngjunkang"},"content":"                } else {","lastModifiedDate":"2022-01-24"},{"lineNumber":116,"author":{"gitId":"ngjunkang"},"content":"                    newTask \u003d new Event(description, additionalInfo);","lastModifiedDate":"2022-01-24"},{"lineNumber":117,"author":{"gitId":"ngjunkang"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":118,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":119,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":120,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":121,"author":{"gitId":"ngjunkang"},"content":"        if (isDone) {","lastModifiedDate":"2022-01-24"},{"lineNumber":122,"author":{"gitId":"ngjunkang"},"content":"            newTask.mark();","lastModifiedDate":"2022-01-24"},{"lineNumber":123,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":124,"author":{"gitId":"ngjunkang"},"content":"        return newTask;","lastModifiedDate":"2022-01-24"},{"lineNumber":125,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":126,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":127,"author":{"gitId":"ngjunkang"},"content":"    private TaskType getTaskType(String[] taskStrings) throws BaronException {","lastModifiedDate":"2022-02-14"},{"lineNumber":128,"author":{"gitId":"ngjunkang"},"content":"        assert (taskStrings.length \u003d\u003d 3) || (taskStrings.length \u003d\u003d 4) : \"taskStrings.length must be 3 or 4\";","lastModifiedDate":"2022-02-14"},{"lineNumber":129,"author":{"gitId":"ngjunkang"},"content":"        switch (taskStrings[0]) {","lastModifiedDate":"2022-02-14"},{"lineNumber":130,"author":{"gitId":"ngjunkang"},"content":"        case \"T\":","lastModifiedDate":"2022-02-14"},{"lineNumber":131,"author":{"gitId":"ngjunkang"},"content":"            return TaskType.TODO;","lastModifiedDate":"2022-02-14"},{"lineNumber":132,"author":{"gitId":"ngjunkang"},"content":"        case \"D\":","lastModifiedDate":"2022-02-14"},{"lineNumber":133,"author":{"gitId":"ngjunkang"},"content":"            return TaskType.DEADLINE;","lastModifiedDate":"2022-02-14"},{"lineNumber":134,"author":{"gitId":"ngjunkang"},"content":"        case \"E\":","lastModifiedDate":"2022-02-14"},{"lineNumber":135,"author":{"gitId":"ngjunkang"},"content":"            return TaskType.EVENT;","lastModifiedDate":"2022-02-14"},{"lineNumber":136,"author":{"gitId":"ngjunkang"},"content":"        default:","lastModifiedDate":"2022-02-14"},{"lineNumber":137,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.MESSAGE_INVALID_FILE_FORMAT);","lastModifiedDate":"2022-02-14"},{"lineNumber":138,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":139,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":140,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":141,"author":{"gitId":"ngjunkang"},"content":"    private boolean getIsDone(String[] taskStrings) throws BaronException {","lastModifiedDate":"2022-02-14"},{"lineNumber":142,"author":{"gitId":"ngjunkang"},"content":"        assert (taskStrings.length \u003d\u003d 3) || (taskStrings.length \u003d\u003d 4) : \"taskStrings.length must be 3 or 4\";","lastModifiedDate":"2022-02-14"},{"lineNumber":143,"author":{"gitId":"ngjunkang"},"content":"        switch (taskStrings[1]) {","lastModifiedDate":"2022-02-14"},{"lineNumber":144,"author":{"gitId":"ngjunkang"},"content":"        case \"0\":","lastModifiedDate":"2022-02-14"},{"lineNumber":145,"author":{"gitId":"ngjunkang"},"content":"            return false;","lastModifiedDate":"2022-02-14"},{"lineNumber":146,"author":{"gitId":"ngjunkang"},"content":"        case \"1\":","lastModifiedDate":"2022-02-14"},{"lineNumber":147,"author":{"gitId":"ngjunkang"},"content":"            return true;","lastModifiedDate":"2022-02-14"},{"lineNumber":148,"author":{"gitId":"ngjunkang"},"content":"        default:","lastModifiedDate":"2022-02-14"},{"lineNumber":149,"author":{"gitId":"ngjunkang"},"content":"            throw new BaronException(Message.MESSAGE_INVALID_FILE_FORMAT);","lastModifiedDate":"2022-02-14"},{"lineNumber":150,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":151,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":152,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":153,"author":{"gitId":"ngjunkang"},"content":"    private String getDescription(String[] taskStrings) {","lastModifiedDate":"2022-02-14"},{"lineNumber":154,"author":{"gitId":"ngjunkang"},"content":"        assert (taskStrings.length \u003d\u003d 3) || (taskStrings.length \u003d\u003d 4) : \"taskStrings.length must be 3 or 4\";","lastModifiedDate":"2022-02-14"},{"lineNumber":155,"author":{"gitId":"ngjunkang"},"content":"        return taskStrings[2];","lastModifiedDate":"2022-02-14"},{"lineNumber":156,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":157,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":158,"author":{"gitId":"ngjunkang"},"content":"    private LocalDateTime getAdditionalInfo(String[] taskStrings) throws BaronException {","lastModifiedDate":"2022-02-14"},{"lineNumber":159,"author":{"gitId":"ngjunkang"},"content":"        assert (taskStrings.length \u003d\u003d 3) || (taskStrings.length \u003d\u003d 4) : \"taskStrings.length must be 3 or 4\";","lastModifiedDate":"2022-02-14"},{"lineNumber":160,"author":{"gitId":"ngjunkang"},"content":"        if (taskStrings.length \u003d\u003d 3) {","lastModifiedDate":"2022-02-14"},{"lineNumber":161,"author":{"gitId":"ngjunkang"},"content":"            return null;","lastModifiedDate":"2022-02-14"},{"lineNumber":162,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-02-14"},{"lineNumber":163,"author":{"gitId":"ngjunkang"},"content":"        return DateTimeUtil.getDateTime(taskStrings[3]);","lastModifiedDate":"2022-02-14"},{"lineNumber":164,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":165,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":166,"author":{"gitId":"ngjunkang"},"content":"    private void createFileIfNotExists() throws BaronException {","lastModifiedDate":"2022-01-24"},{"lineNumber":167,"author":{"gitId":"ngjunkang"},"content":"        if (!(this.file.exists() \u0026\u0026 this.file.isFile())) {","lastModifiedDate":"2022-01-24"},{"lineNumber":168,"author":{"gitId":"ngjunkang"},"content":"            if (this.file.isDirectory()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":169,"author":{"gitId":"ngjunkang"},"content":"                if (!this.file.delete()) {","lastModifiedDate":"2022-01-24"},{"lineNumber":170,"author":{"gitId":"ngjunkang"},"content":"                    throw new BaronException(Message.MESSAGE_FILE_CREATION_FAIL);","lastModifiedDate":"2022-01-25"},{"lineNumber":171,"author":{"gitId":"ngjunkang"},"content":"                }","lastModifiedDate":"2022-01-24"},{"lineNumber":172,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":173,"author":{"gitId":"ngjunkang"},"content":"            if (this.file.getParentFile() !\u003d null) {","lastModifiedDate":"2022-01-24"},{"lineNumber":174,"author":{"gitId":"ngjunkang"},"content":"                this.file.getParentFile().mkdirs();","lastModifiedDate":"2022-01-24"},{"lineNumber":175,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":176,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-24"},{"lineNumber":177,"author":{"gitId":"ngjunkang"},"content":"            try {","lastModifiedDate":"2022-01-24"},{"lineNumber":178,"author":{"gitId":"ngjunkang"},"content":"                this.file.createNewFile();","lastModifiedDate":"2022-01-24"},{"lineNumber":179,"author":{"gitId":"ngjunkang"},"content":"            } catch (IOException e) {","lastModifiedDate":"2022-01-24"},{"lineNumber":180,"author":{"gitId":"ngjunkang"},"content":"                throw new BaronException(Message.MESSAGE_FILE_CREATION_FAIL);","lastModifiedDate":"2022-01-25"},{"lineNumber":181,"author":{"gitId":"ngjunkang"},"content":"            }","lastModifiedDate":"2022-01-24"},{"lineNumber":182,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-24"},{"lineNumber":183,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-24"},{"lineNumber":184,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-24"}],"authorContributionMap":{"ngjunkang":184}},{"path":"src/main/java/baron/util/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.util;","lastModifiedDate":"2022-01-25"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import baron.message.Message;","lastModifiedDate":"2022-01-25"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import baron.tasks.TaskManager;","lastModifiedDate":"2022-01-25"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"/**","lastModifiedDate":"2022-01-27"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2022-01-27"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":" */","lastModifiedDate":"2022-01-27"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"public class TextUi {","lastModifiedDate":"2022-01-25"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    private static final String separator \u003d \"_____________________________________\\n\";","lastModifiedDate":"2022-01-25"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2022-01-25"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"     * Constructs a {@code TextUi} object with the specified {@code TaskManager}.","lastModifiedDate":"2022-01-27"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"     * @param taskManager the {@code TaskManager} to be used in showWelcomeMessage().","lastModifiedDate":"2022-01-27"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    public TextUi(TaskManager taskManager) {","lastModifiedDate":"2022-01-25"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2022-01-25"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"     * Shows welcome message and shows how many tasks user has.","lastModifiedDate":"2022-01-27"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2022-01-25"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"        String logo \u003d \"______                       \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"                + \"| ___ \\\\                      \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"                + \"| |_/ / __ _ _ __ ___  _ __  \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"                + \"| ___ \\\\/ _` | \u0027__/ _ \\\\| \u0027_ \\\\ \\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"                + \"| |_/ / (_| | | | (_) | | | |\\n\"","lastModifiedDate":"2022-02-03"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"                + \"\\\\____/ \\\\__,_|_|  \\\\___/|_| |_|\\n\";","lastModifiedDate":"2022-02-03"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        String message \u003d \"What can I do for you?\";","lastModifiedDate":"2022-01-25"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        System.out.println(\"Hello from\\n\" + logo + Message.generateNoOfTasksMessage(this.taskManager.getTaskCount())","lastModifiedDate":"2022-01-25"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"                + \"\\n\" + message);","lastModifiedDate":"2022-01-25"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-25"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"    /**","lastModifiedDate":"2022-01-27"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"     * Prints the command output in between two lines using System.out.println.","lastModifiedDate":"2022-01-27"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"     *","lastModifiedDate":"2022-01-27"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"     * @param commandOutput the command output to be printed.","lastModifiedDate":"2022-01-27"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"     */","lastModifiedDate":"2022-01-27"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"    public static void printCommandOutput(String commandOutput) {","lastModifiedDate":"2022-01-25"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        System.out.println(TextUi.separator + commandOutput + \"\\n\" + TextUi.separator);","lastModifiedDate":"2022-01-25"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-25"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-25"}],"authorContributionMap":{"ngjunkang":45}},{"path":"src/main/resources/views/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"5.0\" stylesheets\u003d\"@../styles/DialogBox.css\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"                \u003cInsets topRightBottomLeft\u003d\"10.0\"/\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"                \u003cInsets topRightBottomLeft\u003d\"5.0\"/\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"        \u003cCircle fx:id\u003d\"displayPicture\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" radius\u003d\"30.0\" stroke\u003d\"#ff7e59\"","lastModifiedDate":"2022-02-05"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"                strokeType\u003d\"INSIDE\"/\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"ngjunkang":25}},{"path":"src/main/resources/views/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-05"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"\u003cfx:root type\u003d\"javafx.scene.layout.AnchorPane\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2022-02-05"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2022-02-05"}],"authorContributionMap":{"ngjunkang":19}},{"path":"src/test/java/baron/BaronTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron;","lastModifiedDate":"2022-02-14"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-14"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-02-14"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-14"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"import baron.util.DateTimeUtil;","lastModifiedDate":"2022-02-14"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"public class BaronTest {","lastModifiedDate":"2022-02-14"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-02-14"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    public void getResponse_invalidCommand_invalidCommandWarningMessage() {","lastModifiedDate":"2022-02-15"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"        Baron baron \u003d new Baron();","lastModifiedDate":"2022-02-15"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! I\u0027m sorry, but I beg your pardon?\", baron.getResponse(\"xyz\"));","lastModifiedDate":"2022-02-15"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"    public void getResponse_emptyTodoDescription_emptyTodoDescriptionWarningMessage() {","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"        Baron baron \u003d new Baron();","lastModifiedDate":"2022-02-14"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The description of todo cannot be empty.\", baron.getResponse(\"todo\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The description of todo cannot be empty.\", baron.getResponse(\"todo \"));","lastModifiedDate":"2022-02-14"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    public void getResponse_emptyEventDescription_emptyEventDescriptionWarningMessage() {","lastModifiedDate":"2022-02-15"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"        Baron baron \u003d new Baron();","lastModifiedDate":"2022-02-15"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The description of event cannot be empty.\", baron.getResponse(\"event\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The description of event cannot be empty.\", baron.getResponse(\"event \"));","lastModifiedDate":"2022-02-14"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The description of event cannot be empty.\",","lastModifiedDate":"2022-02-14"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"event /at 20/2/2011 20:11\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The description of event cannot be empty.\", baron.getResponse(\"event /at\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The description of event cannot be empty.\", baron.getResponse(\"event /at 20/2/2011\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-14"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"    public void getResponse_emptyDeadlineDescription_emptyDeadlineDescriptionWarningMessage() {","lastModifiedDate":"2022-02-15"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"        Baron baron \u003d new Baron();","lastModifiedDate":"2022-02-15"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The description of deadline cannot be empty.\", baron.getResponse(\"deadline\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The description of deadline cannot be empty.\", baron.getResponse(\"deadline \"));","lastModifiedDate":"2022-02-14"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The description of deadline cannot be empty.\",","lastModifiedDate":"2022-02-14"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"deadline /by 20/2/2011 20:11\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The description of deadline cannot be empty.\",","lastModifiedDate":"2022-02-14"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"deadline /by\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The description of deadline cannot be empty.\",","lastModifiedDate":"2022-02-14"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"deadline /by 20/2/2011\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"    public void getResponse_duplicateTodo_duplicateTodoWarningMessage() {","lastModifiedDate":"2022-02-15"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"        Baron baron \u003d new Baron();","lastModifiedDate":"2022-02-15"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        String todoTaskCommand \u003d \"todo bob b\" + LocalDateTime.now();","lastModifiedDate":"2022-02-15"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"        baron.getResponse(todoTaskCommand);","lastModifiedDate":"2022-02-15"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! This todo has already been recorded.\", baron.getResponse(todoTaskCommand));","lastModifiedDate":"2022-02-15"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"    public void getResponse_duplicateDeadline_duplicateDeadlineWarningMessage() {","lastModifiedDate":"2022-02-15"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"        Baron baron \u003d new Baron();","lastModifiedDate":"2022-02-15"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"        String eventTaskCommand \u003d \"event bob b \" + LocalDateTime.now() + \" /at \"","lastModifiedDate":"2022-02-15"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"                + DateTimeUtil.getSaveString(LocalDateTime.now());","lastModifiedDate":"2022-02-15"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"        baron.getResponse(eventTaskCommand);","lastModifiedDate":"2022-02-15"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! This event has already been recorded.\", baron.getResponse(eventTaskCommand));","lastModifiedDate":"2022-02-15"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"    public void getResponse_duplicateEvent_duplicateEventWarningMessage() {","lastModifiedDate":"2022-02-15"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"        Baron baron \u003d new Baron();","lastModifiedDate":"2022-02-15"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"        String deadlineTaskCommand \u003d \"deadline bob b \" + LocalDateTime.now() + \" /by \"","lastModifiedDate":"2022-02-15"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"                + DateTimeUtil.getSaveString(LocalDateTime.now());","lastModifiedDate":"2022-02-15"},{"lineNumber":72,"author":{"gitId":"ngjunkang"},"content":"        baron.getResponse(deadlineTaskCommand);","lastModifiedDate":"2022-02-15"},{"lineNumber":73,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! This deadline has already been recorded.\", baron.getResponse(deadlineTaskCommand));","lastModifiedDate":"2022-02-15"},{"lineNumber":74,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":75,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":76,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":77,"author":{"gitId":"ngjunkang"},"content":"    public void getResponse_missingEventDateTime_missingEventDateTimeWarningMessage() {","lastModifiedDate":"2022-02-15"},{"lineNumber":78,"author":{"gitId":"ngjunkang"},"content":"        Baron baron \u003d new Baron();","lastModifiedDate":"2022-02-15"},{"lineNumber":79,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! Please specify a date/time by the /at keyword.\",","lastModifiedDate":"2022-02-15"},{"lineNumber":80,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"event read book /at\"));","lastModifiedDate":"2022-02-15"},{"lineNumber":81,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! Please specify a date/time by the /at keyword.\", baron.getResponse(\"event read book \"));","lastModifiedDate":"2022-02-15"},{"lineNumber":82,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":83,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":84,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":85,"author":{"gitId":"ngjunkang"},"content":"    public void getResponse_missingDeadlineDateTime_missingDeadlineDateTimeWarningMessage() {","lastModifiedDate":"2022-02-15"},{"lineNumber":86,"author":{"gitId":"ngjunkang"},"content":"        Baron baron \u003d new Baron();","lastModifiedDate":"2022-02-15"},{"lineNumber":87,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! Please specify a date/time by the /by keyword.\",","lastModifiedDate":"2022-02-14"},{"lineNumber":88,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"deadline read book /by\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":89,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! Please specify a date/time by the /by keyword.\",","lastModifiedDate":"2022-02-14"},{"lineNumber":90,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"deadline read book \"));","lastModifiedDate":"2022-02-14"},{"lineNumber":91,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":92,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":93,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":94,"author":{"gitId":"ngjunkang"},"content":"    public void getResponse_eventWrongDateTimeFormat_wrongDateTimeFormatWarningMessage() {","lastModifiedDate":"2022-02-15"},{"lineNumber":95,"author":{"gitId":"ngjunkang"},"content":"        Baron baron \u003d new Baron();","lastModifiedDate":"2022-02-15"},{"lineNumber":96,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The date/time should be in the following format: d/M/yyyy HH:mm\",","lastModifiedDate":"2022-02-15"},{"lineNumber":97,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"event read book /at zxx\"));","lastModifiedDate":"2022-02-15"},{"lineNumber":98,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The date/time should be in the following format: d/M/yyyy HH:mm\",","lastModifiedDate":"2022-02-15"},{"lineNumber":99,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"event read book /at 20/2/2011\"));","lastModifiedDate":"2022-02-15"},{"lineNumber":100,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The date/time should be in the following format: d/M/yyyy HH:mm\",","lastModifiedDate":"2022-02-15"},{"lineNumber":101,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"event read book /at 20:11\"));","lastModifiedDate":"2022-02-15"},{"lineNumber":102,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-15"},{"lineNumber":103,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-15"},{"lineNumber":104,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-02-15"},{"lineNumber":105,"author":{"gitId":"ngjunkang"},"content":"    public void getResponse_deadlineWrongDateTimeFormat_wrongDateTimeFormatWarningMessage() {","lastModifiedDate":"2022-02-15"},{"lineNumber":106,"author":{"gitId":"ngjunkang"},"content":"        Baron baron \u003d new Baron();","lastModifiedDate":"2022-02-15"},{"lineNumber":107,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The date/time should be in the following format: d/M/yyyy HH:mm\",","lastModifiedDate":"2022-02-14"},{"lineNumber":108,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"deadline read book /by zxx\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":109,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The date/time should be in the following format: d/M/yyyy HH:mm\",","lastModifiedDate":"2022-02-14"},{"lineNumber":110,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"deadline read book /by 20/2/2011\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":111,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"OOPS!!! The date/time should be in the following format: d/M/yyyy HH:mm\",","lastModifiedDate":"2022-02-14"},{"lineNumber":112,"author":{"gitId":"ngjunkang"},"content":"                baron.getResponse(\"deadline read book /by 20:11\"));","lastModifiedDate":"2022-02-14"},{"lineNumber":113,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-02-14"},{"lineNumber":114,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-02-14"}],"authorContributionMap":{"ngjunkang":114}},{"path":"src/test/java/baron/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.tasks;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-01-26"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2022-01-26"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-02-03"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-02-03"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"public class ToDoTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"    public void toString_basic_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"[T][\\u2718] todo test\", new ToDo(\"todo test\").toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"    public void toString_marked_xInSecondBox() {","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"        ToDo toDo \u003d new ToDo(\"todo test\");","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(toDo.mark());","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"[T][\\u2713] todo test\", toDo.toString());","lastModifiedDate":"2022-02-15"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    public void toSaveString_basic_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"T|0|todo test\", new ToDo(\"todo test\").toSaveString(\"|\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"    public void toSaveString_marked_display1Not0() {","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"        ToDo toDo \u003d new ToDo(\"todo test\");","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(toDo.mark());","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"Tww1wwtodo test\", toDo.toSaveString(\"ww\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"    public void getStatusIcon_unmark_space() {","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"\\u2718\", new ToDo(\"todo test\").getStatusIcon());","lastModifiedDate":"2022-02-15"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"    public void getStatusIcon_mark_outputX() {","lastModifiedDate":"2022-02-03"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"        ToDo toDo \u003d new ToDo(\"todo test\");","lastModifiedDate":"2022-01-26"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(toDo.mark());","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"\\u2713\", toDo.getStatusIcon());","lastModifiedDate":"2022-02-15"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"    public void mark_basic_true() {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"        ToDo toDo \u003d new ToDo(\"todo test\");","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(toDo.mark());","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"    public void mark_markMarked_false() {","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"        ToDo toDo \u003d new ToDo(\"todo test\");","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(toDo.mark());","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(toDo.mark());","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"    public void unmark_basic_true() {","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"        ToDo toDo \u003d new ToDo(\"todo test\");","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(toDo.mark());","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"        assertTrue(toDo.unmark());","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":65,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":66,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":67,"author":{"gitId":"ngjunkang"},"content":"    public void unmark_unmarkUnmarked_false() {","lastModifiedDate":"2022-01-26"},{"lineNumber":68,"author":{"gitId":"ngjunkang"},"content":"        ToDo toDo \u003d new ToDo(\"todo test\");","lastModifiedDate":"2022-01-26"},{"lineNumber":69,"author":{"gitId":"ngjunkang"},"content":"        assertFalse(toDo.unmark());","lastModifiedDate":"2022-01-26"},{"lineNumber":70,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":71,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ngjunkang":71}},{"path":"src/test/java/baron/util/DateTimeUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"package baron.util;","lastModifiedDate":"2022-01-26"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2022-02-03"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2022-02-03"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2022-01-26"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2022-01-26"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"import baron.exceptions.BaronException;","lastModifiedDate":"2022-02-03"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"public class DateTimeUtilTest {","lastModifiedDate":"2022-01-26"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"    public void getDateTime_validString_success() throws BaronException {","lastModifiedDate":"2022-01-26"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(LocalDateTime.of(2022, 12, 1, 0, 11),","lastModifiedDate":"2022-01-26"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"                DateTimeUtil.getDateTime(\"1/12/2022 00:11\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"    public void getDateTime_validStringWithPadding_success() throws BaronException {","lastModifiedDate":"2022-01-26"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(LocalDateTime.of(2022, 2, 1, 0, 11),","lastModifiedDate":"2022-01-26"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"                DateTimeUtil.getDateTime(\"01/02/2022 00:11\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"    public void getDateTime_invalidString_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"            assertEquals(0, DateTimeUtil.getDateTime(\"invalid\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"            fail();","lastModifiedDate":"2022-01-26"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"        } catch (BaronException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"            assertEquals(\"OOPS!!! The date/time should be in the following format: d/M/yyyy HH:mm\", e.toString());","lastModifiedDate":"2022-02-05"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"    public void getDateTime_onlyDateString_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"            assertEquals(0, DateTimeUtil.getDateTime(\"1/12/2022\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"            fail();","lastModifiedDate":"2022-01-26"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"        } catch (BaronException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"            assertEquals(\"OOPS!!! The date/time should be in the following format: d/M/yyyy HH:mm\", e.toString());","lastModifiedDate":"2022-02-05"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"    public void getDateTime_onlyTimeString_exceptionThrown() {","lastModifiedDate":"2022-01-26"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"        try {","lastModifiedDate":"2022-01-26"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"            assertEquals(0, DateTimeUtil.getDateTime(\"00:11\"));","lastModifiedDate":"2022-01-26"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"            fail();","lastModifiedDate":"2022-01-26"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"        } catch (BaronException e) {","lastModifiedDate":"2022-01-26"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"            assertEquals(\"OOPS!!! The date/time should be in the following format: d/M/yyyy HH:mm\", e.toString());","lastModifiedDate":"2022-02-05"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"        }","lastModifiedDate":"2022-01-26"},{"lineNumber":53,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":54,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":55,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":56,"author":{"gitId":"ngjunkang"},"content":"    public void getSaveString_validLocalDateTime_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":57,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"12/2/2011 01:02\", DateTimeUtil.getSaveString(LocalDateTime.of(2011, 2, 12, 1, 2)));","lastModifiedDate":"2022-01-26"},{"lineNumber":58,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":59,"author":{"gitId":"ngjunkang"},"content":"","lastModifiedDate":"2022-01-26"},{"lineNumber":60,"author":{"gitId":"ngjunkang"},"content":"    @Test","lastModifiedDate":"2022-01-26"},{"lineNumber":61,"author":{"gitId":"ngjunkang"},"content":"    public void getDisplayString_validLocalDateTime_success() {","lastModifiedDate":"2022-01-26"},{"lineNumber":62,"author":{"gitId":"ngjunkang"},"content":"        assertEquals(\"Feb 12 2011, 01:02\", DateTimeUtil.getDisplayString(LocalDateTime.of(2011, 2, 12, 1, 2)));","lastModifiedDate":"2022-01-26"},{"lineNumber":63,"author":{"gitId":"ngjunkang"},"content":"    }","lastModifiedDate":"2022-01-26"},{"lineNumber":64,"author":{"gitId":"ngjunkang"},"content":"}","lastModifiedDate":"2022-01-26"}],"authorContributionMap":{"ngjunkang":64}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngjunkang"},"content":"todo testing todo","lastModifiedDate":"2022-01-20"},{"lineNumber":2,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":3,"author":{"gitId":"ngjunkang"},"content":"todo","lastModifiedDate":"2022-01-20"},{"lineNumber":4,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":5,"author":{"gitId":"ngjunkang"},"content":"deadline testing deadline /by today","lastModifiedDate":"2022-01-20"},{"lineNumber":6,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":7,"author":{"gitId":"ngjunkang"},"content":"deadline testing deadline w/o by","lastModifiedDate":"2022-01-20"},{"lineNumber":8,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":9,"author":{"gitId":"ngjunkang"},"content":"deadline testing deadline w/o by 2 /by","lastModifiedDate":"2022-01-20"},{"lineNumber":10,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":11,"author":{"gitId":"ngjunkang"},"content":"deadline /by no description","lastModifiedDate":"2022-01-20"},{"lineNumber":12,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":13,"author":{"gitId":"ngjunkang"},"content":"deadline","lastModifiedDate":"2022-01-20"},{"lineNumber":14,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":15,"author":{"gitId":"ngjunkang"},"content":"event testing event /at today","lastModifiedDate":"2022-01-20"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"ngjunkang"},"content":"event testing event w/o at","lastModifiedDate":"2022-01-20"},{"lineNumber":18,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":19,"author":{"gitId":"ngjunkang"},"content":"event testing event w/o at 2 /at","lastModifiedDate":"2022-01-20"},{"lineNumber":20,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":21,"author":{"gitId":"ngjunkang"},"content":"event /at no description","lastModifiedDate":"2022-01-20"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"event","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":25,"author":{"gitId":"ngjunkang"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":26,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":27,"author":{"gitId":"ngjunkang"},"content":"mark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":28,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":29,"author":{"gitId":"ngjunkang"},"content":"mark","lastModifiedDate":"2022-01-20"},{"lineNumber":30,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":31,"author":{"gitId":"ngjunkang"},"content":"mark 22","lastModifiedDate":"2022-01-20"},{"lineNumber":32,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":33,"author":{"gitId":"ngjunkang"},"content":"mark wrong","lastModifiedDate":"2022-01-20"},{"lineNumber":34,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":35,"author":{"gitId":"ngjunkang"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":36,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":37,"author":{"gitId":"ngjunkang"},"content":"unmark 1","lastModifiedDate":"2022-01-20"},{"lineNumber":38,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":39,"author":{"gitId":"ngjunkang"},"content":"unmark","lastModifiedDate":"2022-01-20"},{"lineNumber":40,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":41,"author":{"gitId":"ngjunkang"},"content":"unmark 33","lastModifiedDate":"2022-01-20"},{"lineNumber":42,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":43,"author":{"gitId":"ngjunkang"},"content":"unmark 3ee","lastModifiedDate":"2022-01-20"},{"lineNumber":44,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":45,"author":{"gitId":"ngjunkang"},"content":"delete 2","lastModifiedDate":"2022-01-20"},{"lineNumber":46,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":47,"author":{"gitId":"ngjunkang"},"content":"delete","lastModifiedDate":"2022-01-20"},{"lineNumber":48,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":49,"author":{"gitId":"ngjunkang"},"content":"delete 44","lastModifiedDate":"2022-01-20"},{"lineNumber":50,"author":{"gitId":"ngjunkang"},"content":"list","lastModifiedDate":"2022-01-20"},{"lineNumber":51,"author":{"gitId":"ngjunkang"},"content":"delete we","lastModifiedDate":"2022-01-20"},{"lineNumber":52,"author":{"gitId":"ngjunkang"},"content":"bye","lastModifiedDate":"2022-01-20"}],"authorContributionMap":{"ngjunkang":52}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ngjunkang"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/baron/*.java","lastModifiedDate":"2022-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"ngjunkang"},"content":"# run the program, feed baron.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":23,"author":{"gitId":"ngjunkang"},"content":"java -classpath ../bin baron.Baron \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ngjunkang":3,"-":35}}]
